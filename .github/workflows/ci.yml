name: ci

on:
  push:
    branches: [main]
  pull_request:

env:
  ACR_NAME: posacrfa01 # ← tu ACR exacto
  IMAGE_NAME: webapp # ← nombre del Deployment + contenedor
  CLUSTER_RG: myTFResourceGroup
  CLUSTER_NAME: pos-aks
  K8S_NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1) Login a Azure con el SP del secreto
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 2) Login al ACR
      - uses: azure/docker-login@v2
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      # 3) Build + push (tag = SHA)
      - name: Build and Push
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
          docker push  $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # 4) Obtén kubeconfig del clúster
      - uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.CLUSTER_RG }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # 5) Despliega: actualiza imagen del Deployment
      - name: Deploy to AKS
        run: |
          kubectl -n $K8S_NAMESPACE set image deployment/$IMAGE_NAME \
            $IMAGE_NAME=$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG --record
